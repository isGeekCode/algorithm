////
////  BJ_11726.swift
////  Algorithm
////
////  Created by 방현석 on 6/5/24.
////
//
//import Foundation
//
//// MARK: 2 x n 타일링
//
//
///**
// 
// - 문제
// 2×n 크기의 직사각형을 1×2, 2×1 타일로 채우는 방법의 수를 구하는 프로그램을 작성하시오.
//
// 아래 그림은 2×5 크기의 직사각형을 채운 한 가지 방법의 예이다.
//
//  |    :::: 1 x 2
//  - :::: 2 x 1
// 
//   ||=|
//
// 
// - 입력
// 첫째 줄에 n이 주어진다. (1 ≤ n ≤ 1,000)
//
//
// 
// - 출력
// 첫째 줄에 2×n 크기의 직사각형을 채우는 방법의 수를 10,007로 나눈 나머지를 출력한다.
//
//
// 
// - 예제1
// - 예제 입력 :
// 2
// - 예제 출력 :
// 2
// 
// - 예제2
// - 예제 입력 :
// 9
// - 예제 출력 :
// 55
// 
//
// */
//
//// MARK: 내 답
///// 1. 아이디어
/////
///// n = 1   -> 1
///// |
///// n = 2   -> 2
///// ||  =
///// n = 3  -> 3
/////  |=   ||| =|
/////
/////A1: 1
/////A2: 2,
/////A3 : 1+2
/////
/////An = A(n-1) + A(n-2)
/////이런경우는 3번까지 나와야 이전과 이전 값을 구할 수 있음
/////
/////for문으로 3부터 n까지 순회
/////이전값과 그 이전 값을 더해서 저장 -> 10007로 나눈 나머지 값
/////
///// 2. 시간복잡도
///// for N -> O(N)
///// 3. 자료구조
///// - DP 값을 저장하는  배열 [Int]
/////
//
//
//let n = Int(readLine()!)!
//var result = [0, 1, 2] // 초기값 3개는 지정하기
//for i in 3...n+1 {
//    result.append((result[i-1] + result[i-2])%10007)
//}
//print(result[n])

//// MARK: Insight
///*
// <#text#>
// */
//
//
//// MARK: Other Idea
///*
// <#text#>
// */
//
//
//// MARK: 다른 답 중 인상적인 답
